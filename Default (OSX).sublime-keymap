[
	// auto completion
	{ "keys": ["super+."], "command": "auto_complete" },
	{ "keys": ["super+."], "command": "replace_completion_with_auto_complete", "context":
		[
			{ "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
			{ "key": "auto_complete_visible", "operator": "equal", "operand": false },
			{ "key": "setting.tab_completion", "operator": "equal", "operand": true }
		]
	}, 
	{ "keys": ["super+l"], "command": "move_to", "args": {"to": "eol", "extend": false} },
	// Move out of common paired characters () and [] with `Tab`
	{
		"keys": ["tab"],
		"command": "move",
		"args": {"by": "characters", "forward": true},
		"context": [
			// Check if next char matches (followed by anything)
			{ "key": "following_text", "operator": "regex_match", "operand": "(:?`|\\)|\\]|\\}).*", "match_all": true },
			// ...and that there is a paid character before it on the same
			// line. This lets you `tab` to Indent at lines with single ]s
			// still, like in a JSOn file
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "(:?`|\\(|\\[|\\{)", "match_all": true }
		]
	},
 
	// Move out of single and double quotes with `Tab`
	{
		"keys": ["tab"],
		"command": "move",
		"args": {"by": "characters", "forward": true},
		"context": [
			{ "key": "following_text", "operator": "regex_match", "operand": "(?:\"|').*", "match_all": true },
 
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "(?:\"|')", "match_all": true }
		]
	}

]
